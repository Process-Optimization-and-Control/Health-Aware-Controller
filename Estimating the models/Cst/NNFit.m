function [y1] = NNFit(x1)
%NNFIT neural network simulation function.
%
% Auto-generated by MATLAB, 01-Jun-2021 16:25:57.
% 
% [y1] = NNFit(x1) takes these arguments:
%   x = 4xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-4.46248802722717;-5.17852887458485;-4.48073715332605;-1.68741224378933];
x1_step1.gain = [0.305647520874011;0.217139586607698;0.278754220747781;0.582950679298246];
x1_step1.ymin = -1;

% Layer 1
b1 = [-3.6368225617916514203;-3.4604965217598362415;-3.3993882477660926078;3.3429152811510114418;-2.7375756324674220821;3.0970824771832772271;2.8808908159861923437;-2.7197073688822439586;2.9556174264572043775;-2.6924709380497899858;2.2842578455088622391;2.0969925637326798373;-1.7987572700886578225;2.35703654829010123;1.7030793897467186859;1.5337850172946552174;-1.32799525849210176;-1.1132756416652469511;0.87592510444167581696;-0.84335483580867320885;-0.73835736630732140551;-0.47914421852598454432;0.42880376714229334612;0.092674135782584959875;-0.064662595707212930374;0.14436058609987142964;-0.30469631505996974674;0.2499013377450933493;0.53886616041165957824;-0.76680581241845069407;0.72279971220964878142;-0.91859926267885461115;-1.1121607152947112773;1.1534667309469042173;-1.2279488215882632396;1.8040192732978304058;1.9518653147266327164;2.0731197074574563288;-2.1023722453596840332;-2.343591224518253302;-2.5152357182548494841;-2.4621308139226476541;-2.6524906160908368058;-2.9641946225863722297;3.0514775826410009962;3.200265987236169174;3.206936512226667535;-3.6102939143828418622;3.6179370094589473617;-3.3826172592071270806];
IW1_1 = [0.98862606700652910785 -2.6829196801312504839 -2.273377367597912535 0.97079217330767675342;2.5081553574514403593 2.1052836178718958848 1.6959903011141306273 -0.81357496627002523493;0.76025453882716487186 2.69709844461557946 2.0315135063544671468 -0.33118812357261395718;-1.6575048835692181015 2.8222971274236159367 1.5665727697820406306 0.32692972930504654583;0.77196362880558566655 2.9919509015696985621 -1.365972389041956836 -1.0149549276900236006;-1.4718805248440751665 1.2140627336591365282 -3.0472272494766756701 0.30154733094529889703;-0.90545522877043549403 -1.7179624887765796437 -2.1249767028461370444 2.1153872031771698836;1.5178300760671679104 -2.2224119388744107972 -2.2299855489584841095 -1.1734898196090288724;-1.4240410659877298372 -2.6414588270553713834 0.82129933423622125677 1.5237961557951862357;2.0990535581522671293 0.59514249179701850245 -2.7055137950785894674 0.57000125351016117659;-2.1275363728103373617 -2.2380147653256408091 -2.2410125626761234763 -0.20113935721358555675;-2.2803273135066421951 -1.3455187158740304909 -2.0640787231633641596 -1.2587314038606487454;2.2339646150585732443 0.77280444413226700995 1.6833652497886595345 1.9015269350417303151;-3.0010209608698850126 0.3222108806322788177 1.5468062457076297012 0.87689869047131385749;-2.4773590073626063912 0.97427652709732925906 1.7831510848648832734 -1.005662374382822799;-1.2276187873969994779 3.1839470717866142913 0.072500046763705389141 1.2782798855223607148;1.2564336258324804163 -2.0779995526199690481 1.9078811123341601341 1.9834716879135851908;1.4937641601572677619 -1.953536027493632421 1.0258739886424370624 2.0899135031958286923;-1.7092957979868246277 2.3879287312910211227 -0.8561826291164323921 1.8481714257228816223;2.0392456796281894782 -0.83323271714033131374 1.9307371650906226535 -2.1386389206875282554;0.23067562741271924187 0.28825809356150344787 2.5897408761071405436 2.5698680561006539413;1.0625063512804360233 2.8028069557746002616 0.28269553734139024614 2.1725855684652071176;-1.3471745347749930488 1.8788925338015036726 -2.4341447599526673251 -1.4646503836440618596;0.1234508188639475007 -1.156354648078543379 2.6763301491999915704 -2.0152082304986045358;2.007975698156904798 0.55261401046141878091 -2.2409429045357707189 2.1280984319077087541;1.136691738300289245 1.9932760244947269612 2.3169644020867288248 1.4497000136387596658;-2.0104579440544911861 2.0992901797352754301 -0.85957658249839208331 -1.409343370000775808;1.6892685201824884089 -2.4272776281768462248 1.8502828583954356034 1.2052093221581920979;2.1191467610885403872 0.73081708004359002828 1.7716630455490760543 -2.3815622655790824602;-0.053607457372711227184 2.1824140855826650309 1.8850198861608700174 -2.3154945426576429846;2.2982564434054779667 1.4028365874563579752 2.4039174351998924273 -0.96956794747702468307;-1.5308470592336735905 -0.24631697909016747605 2.2154940600417787344 2.336069224232368402;-0.66987926819560583702 1.8949485385985085362 2.3030013250496601529 -2.1156512731225576296;0.51698902382859623916 -1.7986049572344666725 2.0837062490738529341 2.0317757541824685852;-0.10095523800859404484 -1.4263225730623896315 -2.9283327858894616647 -1.6470127462917096839;1.9761024381386211868 1.2816100613433121236 -1.3862062803517969378 -2.4649515483969768326;0.48797032807616597117 -1.0177718367671741984 -3.1022830129111187425 1.5131204814561542982;1.9374756610431718151 -0.33894663416986958726 2.3535059337584507411 -1.9409914135094388232;-0.69480342002147188474 3.0568749977861644496 -1.1461806881234883893 0.91752597349715103725;-0.93572235228095002046 1.6308960098689297968 2.4265572400341044457 1.8811420121666535543;-1.2419362641258018254 -0.1947542570049235755 2.7551217991761336457 2.0118038580914143765;-1.6901563426742425289 -2.4776255030002607427 -1.1458314110881708814 -1.8411246548916129218;-2.0751752192969501465 -0.82043989184195020847 2.5387566488970070289 1.4336000507419639494;-0.69508010901863059861 3.0754349851117286363 0.049108362512195365135 1.2998780805040317521;1.8719031755908990267 1.7017448898988312145 -1.7579307029116821859 1.9599768115127189638;0.39064967580929288449 -2.4421330497278659344 -0.7520854315268797885 2.5096953996750133165;1.8320635020008360083 -1.9100184620658509083 2.3709718781884747685 -0.92715995138636497774;-2.8033186437634620702 1.6661393156701911344 -1.1373711308597442837 -0.85794457876253005235;2.7791948089263436295 -0.36158402343921036692 1.5014982908104981263 1.7631267938323376132;-1.8091643323302286639 2.2749925953574501314 0.67891326499751203372 2.3837132490749266545];

% Layer 2
b2 = -0.70697321751339914364;
LW2_1 = [0.50235597959305189342 0.11462908183481136659 -0.077052172609341870735 -0.38056729790450027906 0.33776610544856805474 0.063650041254111791589 -0.054458510003055057846 -0.07375303195249088839 0.061605845073549325708 -0.5344906197407967019 0.055281243685686827505 -0.34141220757613088832 -0.30696877331097077723 0.49576367531211329442 -0.34117465786545869699 0.0036740248501561682468 -0.404472369962326328 0.49443596304100873029 0.015990317562585541072 -0.13183957427318032662 0.15062143721340359726 0.0040621003308053795292 0.051045493620906406962 0.050281886007906111125 -0.01153799918343522031 0.070205996900129949423 -0.32811512885144350493 -0.24812350728600574001 0.04176326006661246204 0.020291279137144829087 0.0053180160634235841555 0.083266055014495493625 -0.08826853276130300352 0.072983709528079615536 -0.060008586593445073509 0.010640320769801156833 0.0029427146586710117501 -0.099031496458261231153 -0.12343625515530885772 0.1023064176919482593 0.037550200146569637227 -0.066842600246968392197 0.59070166617355457372 -0.048414267042876810154 0.03418351710647678926 0.26963112928061416795 0.77677404555980666956 -0.70841334768785568787 0.089404264958484483405 0.43242011155099552289];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.574079476354099;
y1_step1.xoffset = -1.68347654001744;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
